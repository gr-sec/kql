// Suspicious PowerShell Commands (lolbas, PowerSploit, Empire etc)
// Query for Powershell cmdlets
let powershellCommands =
    DeviceEvents
    | where ActionType == "PowerShellCommand"
    // Extract the powershell command name from the Command field in the AdditionalFields JSON column
    | project PowershellCommand=extractjson("$.Command", AdditionalFields, typeof(string)), InitiatingProcessCommandLine, InitiatingProcessParentFileName, Timestamp, DeviceId, DeviceName, ReportId
    | where PowershellCommand !endswith ".ps1" and PowershellCommand !endswith ".exe";
powershellCommands 
| where PowershellCommand =~ "Add-Exfiltration"
   or PowershellCommand =~ "Add-Persistence"
   or PowershellCommand =~ "Add-RegBackdoor"
   or PowershellCommand =~ "Add-ScrnSaveBackdoor"
   or PowershellCommand =~ "Check-VM"
   or PowershellCommand =~ "Do-Exfiltration"
   or PowershellCommand =~ "Enabled-DuplicateToken"
   or PowershellCommand =~ "Exploit-Jboss"
   or PowershellCommand =~ "Find-Fruit"
   or PowershellCommand =~ "Find-GPOLocation"
   or PowershellCommand =~ "Find-TrustedDocuments"
   or PowershellCommand =~ "FromBase64String"
   or PowershellCommand =~ "Get-ApplicationHost"
   or PowershellCommand =~ "Get-ChromeDump"
   or PowershellCommand =~ "Get-ClipboardContents"
   or PowershellCommand =~ "Get-FoxDump"
   or PowershellCommand =~ "Get-GPPPassword"
   or PowershellCommand =~ "Get-IndexedItem"
   or PowershellCommand =~ "Get-Keystrokes"
   or PowershellCommand =~ "Get-LSASecret"
   or PowershellCommand =~ "Get-PassHashes"
   or PowershellCommand =~ "Get-RegAlwaysInstallElevated"
   or PowershellCommand =~ "Get-RegAutoLogon"
   or PowershellCommand =~ "Get-RickAstley"
   or PowershellCommand =~ "Get-Screenshot"
   or PowershellCommand =~ "Get-SecurityPackages"
   or PowershellCommand =~ "Get-ServiceFilePermission"
   or PowershellCommand =~ "Get-ServicePermission"
   or PowershellCommand =~ "Get-ServiceUnquoted"
   or PowershellCommand =~ "Get-SiteListPassword"
   or PowershellCommand =~ "Get-System"
   or PowershellCommand =~ "Get-TimedScreenshot"
   or PowershellCommand =~ "Get-UnattendedInstallFile"
   or PowershellCommand =~ "Get-Unconstrained"
   or PowershellCommand =~ "Get-VaultCredential"
   or PowershellCommand =~ "Get-VulnAutoRun"
   or PowershellCommand =~ "Get-VulnSchTask"
   or PowershellCommand =~ "Gupt-Backdoor"
   or PowershellCommand =~ "HTTP-Login"
   or PowershellCommand =~ "Install-ServiceBinary"
   or PowershellCommand =~ "Install-SSP"
   or PowershellCommand =~ "Invoke-ACLScanner"
   or PowershellCommand =~ "Invoke-ADSBackdoor"
   or PowershellCommand =~ "Invoke-ARPScan"
   or PowershellCommand =~ "Invoke-BackdoorLNK"
   or PowershellCommand =~ "Invoke-BypassUAC"
   or PowershellCommand =~ "Invoke-CredentialInjection"
   or PowershellCommand =~ "Invoke-DCSync"
   or PowershellCommand =~ "Invoke-DllInjection"
   or PowershellCommand =~ "Invoke-DowngradeAccount"
   or PowershellCommand =~ "Invoke-EgressCheck"
   or PowershellCommand =~ "Invoke-Inveigh"
   or PowershellCommand =~ "Invoke-InveighRelay"
   or PowershellCommand =~ "Invoke-Mimikatz"
   or PowershellCommand =~ "Invoke-Mimikittenz"
   or PowershellCommand =~ "Invoke-NetRipper"
   or PowershellCommand =~ "Invoke-NinjaCopy"
   or PowershellCommand =~ "Invoke-Paranoia"
   or PowershellCommand =~ "Invoke-PortScan"
   or PowershellCommand =~ "Invoke-PoshRatHttp"
   or PowershellCommand =~ "Invoke-PostExfil"
   or PowershellCommand =~ "Invoke-PowerDump"
   or PowershellCommand =~ "Invoke-PowerShellTCP"
   or PowershellCommand =~ "Invoke-PowerShellWMI"
   or PowershellCommand =~ "Invoke-PsExec"
   or PowershellCommand =~ "Invoke-PSInject"
   or PowershellCommand =~ "Invoke-PsUaCme"
   or PowershellCommand =~ "Invoke-ReflectivePEInjection"
   or PowershellCommand =~ "Invoke-ReverseDNSLookup"
   or PowershellCommand =~ "Invoke-RunAs"
   or PowershellCommand =~ "Invoke-ServiceAbuse"
   or PowershellCommand =~ "Invoke-Shellcode"
   or PowershellCommand =~ "Invoke-SMBScanner"
   or PowershellCommand =~ "Invoke-SSHCommand"
   or PowershellCommand =~ "Invoke-Tater"
   or PowershellCommand =~ "Invoke-ThunderStruck"
   or PowershellCommand =~ "Invoke-TokenManipulation"
   or PowershellCommand =~ "Invoke-UserHunter"
   or PowershellCommand =~ "Invoke-VoiceTroll"
   or PowershellCommand =~ "Invoke-WinEnum"
   or PowershellCommand =~ "Invoke-WmiCommand"
   or PowershellCommand =~ "Invoke-WScriptBypassUAC"
   or PowershellCommand =~ "IO.Compression.GzipStream"
   or PowershellCommand =~ "IO.MemoryStream"
   or PowershellCommand =~ "MailRaider"
   or PowershellCommand =~ "New-HoneyHash"
   or PowershellCommand =~ "Out-Minidump"
   or PowershellCommand =~ "Port-Scan"
   or PowershellCommand =~ "PowerBreach"
   or PowershellCommand =~ "PowerUp"
   or PowershellCommand =~ "PowerView"
   or PowershellCommand =~ "Remove-Update"
   or PowershellCommand =~ "Set-MacAttribute"
   //or PowershellCommand =~ "Set-Wallpaper"
   or PowershellCommand =~ "Show-TargetScreen"
   or PowershellCommand =~ "Start-CaptureServer"
   or PowershellCommand =~ "VolumeShadowCopyTools"